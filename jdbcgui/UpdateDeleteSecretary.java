package jdbcgui;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import static jdbcgui.UpdateDeleteEmployee.txtSSN;
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author wissam
 */
public class UpdateDeleteSecretary extends javax.swing.JFrame {

    myDBCon dbCon;
    ResultSet rs;
    ResultSet rsdeptno;

    /**
     * Creates new form AddEmployee
     */
    public UpdateDeleteSecretary() {
        initComponents();
        
        // center form in screen 
        this.setLocationRelativeTo(null);
        
        // set all error labels to invisible
        lblTypingSpeedError.setVisible(false);
        dbCon = new myDBCon();
        getNewData();
    }

    private void getNewData() {

        try {

            // populate mgr field
            rs = dbCon.executeStatement("SELECT typingspeed FROM secretary WHERE SSN = " + txtSSN.getText().trim());
//            rs = statement.executeQuery("SELECT empno, ename, job, mgr, hiredate, sal, comm, deptno FROM emp ORDER BY empno ASC ");
            
            // populate rest of fields
            rs.beforeFirst();
            populateFields();
        } catch (SQLException e) {
            javax.swing.JLabel label = new javax.swing.JLabel("SQL Error - Display selected SSN.");
            label.setFont(new java.awt.Font("Arial", java.awt.Font.BOLD, 18));
            JOptionPane.showMessageDialog(null, label, "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTypingSpeed = new javax.swing.JLabel();
        txtTypingSpeed = new javax.swing.JTextField();
        lblTypingSpeedError = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Update/Delete Employee");
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel1.setText("Add New Secretary");

        jTypingSpeed.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jTypingSpeed.setText("Typing Speed:");

        txtTypingSpeed.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtTypingSpeed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTypingSpeedActionPerformed(evt);
            }
        });

        lblTypingSpeedError.setFont(new java.awt.Font("Tahoma", 2, 18)); // NOI18N
        lblTypingSpeedError.setForeground(new java.awt.Color(255, 0, 0));
        lblTypingSpeedError.setText("error label");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jTypingSpeed)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtTypingSpeed, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblTypingSpeedError, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(jLabel1)))
                .addContainerGap(32, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel1)
                .addGap(63, 63, 63)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTypingSpeed)
                    .addComponent(txtTypingSpeed, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTypingSpeedError))
                .addContainerGap(37, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtTypingSpeedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTypingSpeedActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTypingSpeedActionPerformed

    private void populateFields() {
        try {
            if(rs.next())
                txtTypingSpeed.setText(rs.getString("typingspeed"));
            else
                txtTypingSpeed.setText("");

        } catch (SQLException ex) {
            Logger.getLogger(UpdateDeleteSecretary.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void MoveNext() {
        try {
            // TODO add your handling code here:
            if (!rs.isLast()) {
                rs.next();
                populateFields();
            }
        } catch (SQLException ex) {
            Logger.getLogger(UpdateDeleteSecretary.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private void MovePrevious() {
        try {
            // TODO add your handling code here:
            if (!rs.isFirst()) {
                rs.previous();
                populateFields();
            }
        } catch (SQLException ex) {
            Logger.getLogger(UpdateDeleteSecretary.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    
    void clearErrorLabels() {
        lblTypingSpeedError.setText("");
        lblTypingSpeedError.setVisible(false);
    }

    public boolean isInteger(String s) {
        try {
            Integer.parseInt(s);
            return true;
        } catch (NumberFormatException ex) {
            return false;
        }
    }

    public boolean isDouble(String s) {
        try {
            Double.parseDouble(s);
            return true;
        } catch (NumberFormatException ex) {
            return false;
        }
    }

    boolean isValidData() {
        clearErrorLabels();
        boolean result = true; // assume all details are true, set to false if otherwise 
        // you need to check format deails and make sure they are consistent with DB 
        

        if (txtTypingSpeed.getText().trim().isEmpty() || (txtTypingSpeed.getText().trim().length() > 10)) {
            if (txtTypingSpeed.getText().trim().isEmpty()) {
                lblTypingSpeedError.setText("Invalid. Cannot be empty.");
            } else if ((txtTypingSpeed.getText().trim().length() > 10)) {
                lblTypingSpeedError.setText("Invalid. Must be < 10 chars.");
            }
            lblTypingSpeedError.setVisible(true);
            result = false;
        }

        

        

        return result;
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jTypingSpeed;
    private javax.swing.JLabel lblTypingSpeedError;
    public static javax.swing.JTextField txtTypingSpeed;
    // End of variables declaration//GEN-END:variables
}
