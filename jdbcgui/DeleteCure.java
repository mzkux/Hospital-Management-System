package jdbcgui;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author 
 */
public class DeleteCure extends javax.swing.JFrame {

    myDBCon dbCon;
    ResultSet rs;
    ResultSet rsdeptno;

    /**
     * Creates new form AddEmployee
     */
    public DeleteCure() {
        initComponents();
        
        // center form in screen 
        this.setLocationRelativeTo(null);
        
        // set all error labels to invisible
        lblErrorMedID.setVisible(false);
        lblErrorPatientId.setVisible(false);
        
        dbCon = new myDBCon();
        getNewData();
    }

    private void getNewData() {

        try {

//            // populate medicine id combobox
//            rs = dbCon.executeStatement("SELECT id FROM medicine ORDER BY name ASC");
//            while (rs.next()) {
//                cmbMedID.addItem(rs.getString("id"));
//            }
//            
//            // populate disease id combobox
//            rs = dbCon.executeStatement("SELECT id FROM disease ORDER BY id ASC");
//            while (rs.next()) {
//                cmbDiseaseId.addItem(rs.getString("id"));
//            }


            // populate rest of fields
            rs = dbCon.executeStatement("SELECT medicine_id, disease_id FROM cures ORDER BY medicine_id ASC ");
            
            rs.beforeFirst();
            rs.first();
            populateFields();
        } catch (SQLException e) {
            javax.swing.JLabel label = new javax.swing.JLabel("SQL Error - Display selected cure id.");
            label.setFont(new java.awt.Font("Arial", java.awt.Font.BOLD, 18));
            JOptionPane.showMessageDialog(null, label, "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        btnDelete = new javax.swing.JButton();
        btnNext = new javax.swing.JButton();
        btnPrevious = new javax.swing.JButton();
        lblErrorMedID = new javax.swing.JLabel();
        lblErrorPatientId = new javax.swing.JLabel();
        txtMedID = new javax.swing.JTextField();
        txtDiseaseID = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Update/Delete Employee");
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel1.setText("Delete Cure");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel7.setText("Medicine ID:");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel8.setText("Disease ID:");

        btnDelete.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnNext.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        btnNext.setText("Next >>");
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });

        btnPrevious.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        btnPrevious.setText("<< Previous");
        btnPrevious.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPreviousActionPerformed(evt);
            }
        });

        lblErrorMedID.setFont(new java.awt.Font("Tahoma", 2, 18)); // NOI18N
        lblErrorMedID.setForeground(new java.awt.Color(255, 0, 0));
        lblErrorMedID.setText("error label");

        lblErrorPatientId.setFont(new java.awt.Font("Tahoma", 2, 18)); // NOI18N
        lblErrorPatientId.setForeground(new java.awt.Color(255, 0, 0));
        lblErrorPatientId.setText("error label");

        txtMedID.setEditable(false);
        txtMedID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMedIDActionPerformed(evt);
            }
        });

        txtDiseaseID.setEditable(false);
        txtDiseaseID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDiseaseIDActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(111, 111, 111)
                .addComponent(btnPrevious)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnDelete)
                .addGap(18, 18, 18)
                .addComponent(btnNext)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 195, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(txtMedID, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblErrorMedID, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtDiseaseID, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblErrorPatientId, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(150, 150, 150))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(204, 204, 204))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(lblErrorMedID)
                    .addComponent(txtMedID, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(lblErrorPatientId)
                    .addComponent(txtDiseaseID, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDelete)
                    .addComponent(btnNext)
                    .addComponent(btnPrevious))
                .addGap(0, 56, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void populateFields() {
        try {
//            cmbMedID.setSelectedItem(rs.getString("medicine_id"));
//            cmbDiseaseId.setSelectedItem(rs.getString("disease_id"));
            txtMedID.setText(rs.getString("medicine_id"));
            txtDiseaseID.setText(rs.getString("disease_id"));

            EnableDisableButtons();
        } catch (SQLException ex) {
            Logger.getLogger(DeleteCure.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void MoveNext() {
        try {
            // TODO add your handling code here:
            if (!rs.isLast()) {
                rs.next();
                populateFields();
            }
        } catch (SQLException ex) {
            Logger.getLogger(DeleteCure.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
        MoveNext();
    }//GEN-LAST:event_btnNextActionPerformed

    private void MovePrevious() {
        try {
            // TODO add your handling code here:
            if (!rs.isFirst()) {
                rs.previous();
                populateFields();
            }
        } catch (SQLException ex) {
            Logger.getLogger(DeleteCure.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void EnableDisableButtons() {
        try {
            if (rs.isFirst()) {
                btnPrevious.setEnabled(false);
            } else {
                btnPrevious.setEnabled(true);
            }
            if (rs.isLast()) {
                btnNext.setEnabled(false);
            } else {
                btnNext.setEnabled(true);
            }
        } catch (SQLException ex) {
            Logger.getLogger(DeleteCure.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private void btnPreviousActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPreviousActionPerformed
        // TODO add your handling code here:
        MovePrevious();
    }//GEN-LAST:event_btnPreviousActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        try {            
            
//            String prepSQL = "DELETE cures WHERE medicine_id = '" + cmbMedID.getSelectedItem().toString().trim() + "' AND disease_id = '" + cmbDiseaseId.getSelectedItem().toString().trim() + "'";
            String prepSQL = "DELETE cures WHERE medicine_id = '" + txtMedID.getText() + "' AND disease_id = '" + txtDiseaseID.getText() + "'";
            System.out.println("[DELETE Cures] " + prepSQL);
            
            // confirmation dialog
            if (JOptionPane.showConfirmDialog(null, "Are you sure you want to delete Cure? ") != 0) {
                JOptionPane.showMessageDialog(null, "Cancelled deletion.");
                return;
            } 
            
            int result = dbCon.executePrepared(prepSQL);
            if (result > 0) {
                javax.swing.JLabel label = new javax.swing.JLabel("Cure deleted successfully.");
                label.setFont(new java.awt.Font("Arial", java.awt.Font.BOLD, 18));
                JOptionPane.showMessageDialog(null, label, "SUCCESS", JOptionPane.INFORMATION_MESSAGE);
                getNewData();
            } else {
                javax.swing.JLabel label = new javax.swing.JLabel("This is not a valid cure combination!");
                label.setFont(new java.awt.Font("Arial", java.awt.Font.BOLD, 18));
                JOptionPane.showMessageDialog(null, label, "ERROR", JOptionPane.ERROR_MESSAGE);
                getNewData();
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error deleting cure.");
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void txtMedIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMedIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMedIDActionPerformed

    private void txtDiseaseIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDiseaseIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDiseaseIDActionPerformed

    void clearErrorLabels() {
        lblErrorMedID.setText("");
        lblErrorMedID.setVisible(false);
        lblErrorPatientId.setText("");
        lblErrorPatientId.setVisible(false);
    }

    public boolean isInteger(String s) {
        try {
            Integer.parseInt(s);
            return true;
        } catch (NumberFormatException ex) {
            return false;
        }
    }

    public boolean isDouble(String s) {
        try {
            Double.parseDouble(s);
            return true;
        } catch (NumberFormatException ex) {
            return false;
        }
    }

    boolean isValidData() throws SQLException {
        clearErrorLabels();
        boolean result = true; 
        
//        String field_med_id = cmbMedID.getSelectedItem().toString();
//        String field_patient_id = cmbDiseaseId.getSelectedItem().toString();
        String field_med_id = txtMedID.getText();
        String field_disease_id = txtDiseaseID.getText();
        
        
        if (field_med_id.equalsIgnoreCase("None")) {
            lblErrorMedID.setText("Please select Medicine before");
            lblErrorMedID.setVisible(true);
            result = false;
        }
        if (field_disease_id.equalsIgnoreCase("None")) {
            lblErrorPatientId.setText("Please select Disease before");
            lblErrorPatientId.setVisible(true);
            result = false;
        }
        
        return result;
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnNext;
    private javax.swing.JButton btnPrevious;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel lblErrorMedID;
    private javax.swing.JLabel lblErrorPatientId;
    private javax.swing.JTextField txtDiseaseID;
    private javax.swing.JTextField txtMedID;
    // End of variables declaration//GEN-END:variables
}
