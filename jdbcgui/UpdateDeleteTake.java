package jdbcgui;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author 
 */
public class UpdateDeleteTake extends javax.swing.JFrame {

    myDBCon dbCon;
    ResultSet rs;
    ResultSet rsdeptno;

    /**
     * Creates new form AddEmployee
     */
    public UpdateDeleteTake() {
        initComponents();
        
        // center form in screen 
        this.setLocationRelativeTo(null);
        
        // set all error labels to invisible
        lblErrorPateintId.setVisible(false);
        lblErrorMedicineId.setVisible(false);
        lblErrorDoses.setVisible(false);
        
        dbCon = new myDBCon();
        getNewData();
    }

    private void getNewData() {

        try {
            // populate medicine id combobox
            rs = dbCon.executeStatement("SELECT id FROM medicine ORDER BY id ASC");
            while (rs.next()) {
                cmbMedicineID.addItem(rs.getString("id"));
            }
            
            // populate patient id combobox
            rs = dbCon.executeStatement("SELECT id FROM patient ORDER BY id ASC");
            while (rs.next()) {
                cmbPatientID.addItem(rs.getString("id"));
            }

            txtDosesPerDay.setText("");

            // populate rest of fields
            rs = dbCon.executeStatement("SELECT medicine_id, patient_id, doses_per_day FROM takes ORDER BY medicine_id ASC ");
            
            rs.beforeFirst();
            rs.first();
            populateFields();
        } catch (SQLException e) {
            javax.swing.JLabel label = new javax.swing.JLabel("SQL Error - Display selected take.");
            label.setFont(new java.awt.Font("Arial", java.awt.Font.BOLD, 18));
            JOptionPane.showMessageDialog(null, label, "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtDosesPerDay = new javax.swing.JTextField();
        cmbMedicineID = new javax.swing.JComboBox<>();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnNext = new javax.swing.JButton();
        btnPrevious = new javax.swing.JButton();
        lblErrorPateintId = new javax.swing.JLabel();
        lblErrorMedicineId = new javax.swing.JLabel();
        lblErrorDoses = new javax.swing.JLabel();
        cmbPatientID = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Update/Delete Employee");
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel1.setText("Update/Delete Take");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel7.setText("Patient ID:");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel8.setText("Medicine ID:");

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel9.setText("Doses Per Day:");

        txtDosesPerDay.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        cmbMedicineID.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        btnUpdate.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnNext.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        btnNext.setText("Next >>");
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });

        btnPrevious.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        btnPrevious.setText("<< Previous");
        btnPrevious.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPreviousActionPerformed(evt);
            }
        });

        lblErrorPateintId.setFont(new java.awt.Font("Tahoma", 2, 18)); // NOI18N
        lblErrorPateintId.setForeground(new java.awt.Color(255, 0, 0));
        lblErrorPateintId.setText("error label");

        lblErrorMedicineId.setFont(new java.awt.Font("Tahoma", 2, 18)); // NOI18N
        lblErrorMedicineId.setForeground(new java.awt.Color(255, 0, 0));
        lblErrorMedicineId.setText("error label");

        lblErrorDoses.setFont(new java.awt.Font("Tahoma", 2, 18)); // NOI18N
        lblErrorDoses.setForeground(new java.awt.Color(255, 0, 0));
        lblErrorDoses.setText("error label");

        cmbPatientID.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(cmbPatientID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblErrorPateintId, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(cmbMedicineID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblErrorMedicineId, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtDosesPerDay, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblErrorDoses, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(106, 106, 106))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(149, 149, 149)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(64, 64, 64)
                        .addComponent(btnPrevious)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnUpdate)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDelete)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnNext)))
                .addContainerGap(95, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(lblErrorPateintId)
                    .addComponent(cmbPatientID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(lblErrorMedicineId)
                    .addComponent(cmbMedicineID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(txtDosesPerDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblErrorDoses))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnUpdate)
                    .addComponent(btnDelete)
                    .addComponent(btnNext)
                    .addComponent(btnPrevious))
                .addGap(0, 43, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void populateFields() {
        try {
            cmbPatientID.setSelectedItem(rs.getString("patient_id"));
            cmbMedicineID.setSelectedItem(rs.getString("medicine_id"));
            txtDosesPerDay.setText(rs.getString("doses_per_day"));

            EnableDisableButtons();
        } catch (SQLException ex) {
            Logger.getLogger(UpdateDeleteTake.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void MoveNext() {
        try {
            // TODO add your handling code here:
            if (!rs.isLast()) {
                rs.next();
                populateFields();
            }
        } catch (SQLException ex) {
            Logger.getLogger(UpdateDeleteTake.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
        MoveNext();
    }//GEN-LAST:event_btnNextActionPerformed

    private void MovePrevious() {
        try {
            // TODO add your handling code here:
            if (!rs.isFirst()) {
                rs.previous();
                populateFields();
            }
        } catch (SQLException ex) {
            Logger.getLogger(UpdateDeleteTake.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void EnableDisableButtons() {
        try {
            if (rs.isFirst()) {
                btnPrevious.setEnabled(false);
            } else {
                btnPrevious.setEnabled(true);
            }
            if (rs.isLast()) {
                btnNext.setEnabled(false);
            } else {
                btnNext.setEnabled(true);
            }
        } catch (SQLException ex) {
            Logger.getLogger(UpdateDeleteTake.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private void btnPreviousActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPreviousActionPerformed
        // TODO add your handling code here:
        MovePrevious();
    }//GEN-LAST:event_btnPreviousActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        try {
            
            String field_patient_id = cmbPatientID.getSelectedItem().toString();
            String field_medicine_id = cmbMedicineID.getSelectedItem().toString();
            String field_doses_per_day = txtDosesPerDay.getText().trim();
            
            String prepSQL = "DELETE takes WHERE medicine_id = '" + field_medicine_id + "'" + " AND patient_id = '" + field_patient_id + "'";
            System.out.println("[DELETE Patient] " + prepSQL);
            
            // confirmation dialog
            if (JOptionPane.showConfirmDialog(null, "Are you sure you want to delete Dose") != 0) {
                JOptionPane.showMessageDialog(null, "Cancelled deletion.");
                return;
            } 
            
            int result = dbCon.executePrepared(prepSQL);
            if (result > 0) {
                javax.swing.JLabel label = new javax.swing.JLabel("Dose deleted successfully.");
                label.setFont(new java.awt.Font("Arial", java.awt.Font.BOLD, 18));
                JOptionPane.showMessageDialog(null, label, "SUCCESS", JOptionPane.INFORMATION_MESSAGE);
                getNewData();
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error deleting Dose.");
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    void clearErrorLabels() {
        lblErrorPateintId.setText("");
        lblErrorPateintId.setVisible(false);
        lblErrorMedicineId.setText("");
        lblErrorMedicineId.setVisible(false);
        lblErrorDoses.setText("");
        lblErrorDoses.setVisible(false);
    }

    public boolean isInteger(String s) {
        try {
            Integer.parseInt(s);
            return true;
        } catch (NumberFormatException ex) {
            return false;
        }
    }

    public boolean isDouble(String s) {
        try {
            Double.parseDouble(s);
            return true;
        } catch (NumberFormatException ex) {
            return false;
        }
    }

    boolean isValidData() throws SQLException {
        clearErrorLabels();
        boolean result = true; 
        
        String field_doses_per_day = txtDosesPerDay.getText().trim();
        
        if (!isInteger(field_doses_per_day)) {
            lblErrorDoses.setText("Doses per day must be a number");
            lblErrorDoses.setVisible(true);
            result = false;
        }
        if (field_doses_per_day.isEmpty()) {
            lblErrorDoses.setText("Cannot be empty");
            lblErrorDoses.setVisible(true);
            result = false;
        }

        return result;
    }

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:

        try {
            // make the result set scrolable forward/backward updatable

            if (isValidData()) {
                String field_patient_id = cmbPatientID.getSelectedItem().toString();
                String field_medicine_id = cmbMedicineID.getSelectedItem().toString();
                String field_doses_per_day = txtDosesPerDay.getText().trim();
                
                
                String prepSQL = "UPDATE takes SET"
                        + " doses_per_day = '" + field_doses_per_day + "'"
                        + " WHERE patient_id = " + field_patient_id
                        + " AND medicine_id = " + field_medicine_id;
                
                System.out.println("[UPDATE Takes] " + prepSQL);
            
                // confirmation dialog
                if (JOptionPane.showConfirmDialog(null, "Are you sure you want to update this Doses?") != 0) {
                    JOptionPane.showMessageDialog(null, "Cancelled update.");
                    return;
                } 
                
                int result = dbCon.executePrepared(prepSQL);
                if (result > 0) {
                    javax.swing.JLabel label = new javax.swing.JLabel("Doses updated successfully.");
                    label.setFont(new java.awt.Font("Arial", java.awt.Font.BOLD, 18));
                    JOptionPane.showMessageDialog(null, label, "SUCCESS", JOptionPane.INFORMATION_MESSAGE);

                    getNewData();
                }
            }

        } catch (SQLException e) {

            JOptionPane.showMessageDialog(null, "Error updating Dose." + e.getMessage());

        }
    }//GEN-LAST:event_btnUpdateActionPerformed
     

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnNext;
    private javax.swing.JButton btnPrevious;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox<String> cmbMedicineID;
    private javax.swing.JComboBox<String> cmbPatientID;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel lblErrorDoses;
    private javax.swing.JLabel lblErrorMedicineId;
    private javax.swing.JLabel lblErrorPateintId;
    private javax.swing.JTextField txtDosesPerDay;
    // End of variables declaration//GEN-END:variables
}
